%!PS-Adobe-3.0 EPSF-3.0
%%Title: (C:\\Users\\WEILIN~1\\AppData\\Local\\Temp\\tp782dc429_cb0a_4af5_9eff_2d39f40bb3be.ps)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 00:35:52 03/20/14
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 140 231 490 563
%%HiResBoundingBox: 140.0 231.0 490.0 563.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Helvetica
[ 0 /space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quoteright/parenleft/parenright
/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/exclamdown
/cent/sterling/fraction/yen/florin/section
/currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright
/fi/fl/space/endash/dagger/daggerdbl
/periodcentered/space/paragraph/bullet/quotesinglbase/quotedblbase
/quotedblright/guillemotright/ellipsis/perthousand/space/questiondown
/space/grave/acute/circumflex/tilde/macron
/breve/dotaccent/dieresis/space/ring/cedilla
/space/hungarumlaut/ogonek/caron/emdash/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/AE/space/ordfeminine
/space/space/space/space/Lslash/Oslash
/OE/ordmasculine/space/space/space/space
/space/ae/space/space/space/dotlessi
/space/space/lslash/oslash/oe/germandbls
/space/space/space/space
/N8/Helvetica -1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3691 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2014-03-20T00:35:52-07:00</xap:CreateDate>
         <xap:ModifyDate>2014-03-20T00:35:52-07:00</xap:ModifyDate>
         <xap:MetadataDate>2014-03-20T00:35:52-07:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:8066EA4302B0E311950CDCE3AB543B49</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:8066EA4302B0E311950CDCE3AB543B49</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>b8a56971-b25d-11e3-0000-54175cacc357</stRef:documentName>
            <stRef:instanceID>uuid:fa53dda1-dc38-4b5c-aa66-4dd1a7f4b497</stRef:instanceID>
            <stRef:documentID>b8a56971-b25d-11e3-0000-54175cacc357</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">C:\Users\WEILIN~1\AppData\Local\Temp\tp782dc429_cb0a_4af5_9eff_2d39f40bb3be.ps</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
140.0 231.0 350.0 332.0 rectclip
q
140.0 231.0 m
490.0 231.0 l
490.0 563.0 l
140.0 563.0 l
h
W
n
q
0.1 0.0 0.0 0.1 0.0 0.0 cm
q
n
960.0 5850.01 m
960.0 2062.5 l
5160.01 2062.5 l
5160.01 5850.01 l
h
W
n
5.00001 w
1 j
n
1507.5 2482.5 m
1507.5 5565.01 l
4762.51 5565.01 l
4762.51 2482.5 l
1507.5 2482.5 l
[/DeviceGray] cs 1.0 sc
S
n
1507.5 5565.01 m
4762.51 5565.01 l
0.0 sc
S
n
1507.5 2482.5 m
4762.51 2482.5 l
S
n
4762.51 2482.5 m
4762.51 5565.01 l
S
n
1507.5 2482.5 m
1507.5 5565.01 l
S
n
1507.5 2482.5 m
4762.51 2482.5 l
S
n
1507.5 2482.5 m
1507.5 5565.01 l
S
n
1507.5 2482.5 m
1507.5 2520.0 l
S
n
1507.5 5565.01 m
1507.5 5535.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
145.5 236.25 m
/N8 10.0 Tf
(-3)
[5.84 5.56 ] pdfxs
Q
n
2047.5 2482.5 m
2047.5 2520.0 l
S
n
2047.5 5565.01 m
2047.5 5535.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
199.5 236.25 m
/N8 10.0 Tf
(-2)
[5.84 5.56 ] pdfxs
Q
n
2587.5 2482.5 m
2587.5 2520.0 l
S
n
2587.5 5565.01 m
2587.5 5535.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
253.5 236.25 m
/N8 10.0 Tf
(-1)
[5.84 5.56 ] pdfxs
Q
n
3135.0 2482.5 m
3135.0 2520.0 l
S
n
3135.0 5565.01 m
3135.0 5535.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
311.25 236.25 m
/N8 10.0 Tf
(0) show
Q
n
3675.01 2482.5 m
3675.01 2520.0 l
S
n
3675.01 5565.01 m
3675.01 5535.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
365.251 236.25 m
/N8 10.0 Tf
(1) show
Q
n
4215.01 2482.5 m
4215.01 2520.0 l
S
n
4215.01 5565.01 m
4215.01 5535.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
419.251 236.25 m
/N8 10.0 Tf
(2) show
Q
n
4762.51 2482.5 m
4762.51 2520.0 l
S
n
4762.51 5565.01 m
4762.51 5535.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
474.001 236.25 m
/N8 10.0 Tf
(3) show
Q
n
1507.5 2482.5 m
1537.5 2482.5 l
S
n
4762.51 2482.5 m
4725.01 2482.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
142.5 244.5 m
/N8 10.0 Tf
(0) show
Q
n
1507.5 3000.0 m
1537.5 3000.0 l
S
n
4762.51 3000.0 m
4725.01 3000.0 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
142.5 296.25 m
/N8 10.0 Tf
(1) show
Q
n
1507.5 3510.01 m
1537.5 3510.01 l
S
n
4762.51 3510.01 m
4725.01 3510.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
142.5 347.25 m
/N8 10.0 Tf
(2) show
Q
n
1507.5 4027.51 m
1537.5 4027.51 l
S
n
4762.51 4027.51 m
4725.01 4027.51 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
142.5 399.001 m
/N8 10.0 Tf
(3) show
Q
n
1507.5 4537.51 m
1537.5 4537.51 l
S
n
4762.51 4537.51 m
4725.01 4537.51 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
142.5 450.001 m
/N8 10.0 Tf
(4) show
Q
n
1507.5 5055.01 m
1537.5 5055.01 l
S
n
4762.51 5055.01 m
4725.01 5055.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
142.5 501.751 m
/N8 10.0 Tf
(5) show
Q
n
1507.5 5565.01 m
1537.5 5565.01 l
S
n
4762.51 5565.01 m
4725.01 5565.01 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
142.5 552.751 m
/N8 10.0 Tf
(6) show
Q
n
1507.5 5565.01 m
4762.51 5565.01 l
S
n
1507.5 2482.5 m
4762.51 2482.5 l
S
n
4762.51 2482.5 m
4762.51 5565.01 l
S
n
1507.5 2482.5 m
1507.5 5565.01 l
S
Q
q
n
1507.5 5565.01 m
1507.5 2475.0 l
4770.01 2475.0 l
4770.01 5565.01 l
h
W
n
20.0001 w
1 j
n
3135.0 2482.5 m
3135.0 5565.01 l
[/DeviceRGB] cs 0.0 0.0 1.0 sc
S
n
1507.5 2482.5 m
1507.5 2505.0 l
1515.0 2512.5 l
1515.0 2527.5 l
1522.5 2542.5 l
1530.0 2565.0 l
1537.5 2587.5 l
1545.0 2617.5 l
1552.5 2640.0 l
1567.5 2677.5 l
1575.0 2707.5 l
1582.5 2745.0 l
1597.5 2782.5 l
1605.0 2820.0 l
1620.0 2865.0 l
1635.0 2910.0 l
1650.0 2962.5 l
1657.5 3007.5 l
1672.5 3060.0 l
1687.5 3112.5 l
1702.5 3165.0 l
1717.5 3225.0 l
1732.5 3277.5 l
1747.5 3337.5 l
1762.5 3405.0 l
1777.5 3465.0 l
1792.5 3525.01 l
1800.0 3592.51 l
1815.0 3660.01 l
1830.0 3727.51 l
1845.0 3795.01 l
1860.0 3862.51 l
1867.5 3930.01 l
1882.5 4005.01 l
1897.5 4072.51 l
1905.0 4147.51 l
1912.5 4200.01 l
1920.0 4252.51 l
1927.5 4305.01 l
1935.0 4357.51 l
S
n
4762.51 2482.5 m
4755.01 2490.0 l
4755.01 2505.0 l
4747.51 2512.5 l
4747.51 2527.5 l
4740.01 2542.5 l
4732.51 2565.0 l
4725.01 2587.5 l
4717.51 2617.5 l
4710.01 2640.0 l
4695.01 2677.5 l
4687.51 2707.5 l
4680.01 2745.0 l
4665.01 2782.5 l
4657.51 2820.0 l
4642.51 2865.0 l
4627.51 2910.0 l
4612.51 2962.5 l
4605.01 3007.5 l
4590.01 3060.0 l
4575.01 3112.5 l
4560.01 3165.0 l
4545.01 3225.0 l
4530.01 3277.5 l
4515.01 3337.5 l
4500.01 3405.0 l
4485.01 3465.0 l
4470.01 3525.01 l
4462.51 3592.51 l
4447.51 3660.01 l
4432.51 3727.51 l
4417.51 3795.01 l
4402.51 3862.51 l
4395.01 3930.01 l
4380.01 4005.01 l
4365.01 4072.51 l
4357.51 4147.51 l
4350.01 4200.01 l
4342.51 4252.51 l
4335.01 4305.01 l
4327.51 4357.51 l
S
Q
q
n
960.0 5850.01 m
960.0 2062.5 l
5160.01 2062.5 l
5160.01 5850.01 l
h
W
n
20.0001 w
1 j
n
3165.0 2482.5 m
3165.0 2465.93 3151.57 2452.5 3135.0 2452.5 c
3118.44 2452.5 3105.0 2465.93 3105.0 2482.5 c
3105.0 2499.07 3118.44 2512.5 3135.0 2512.5 c
3151.57 2512.5 3165.0 2499.07 3165.0 2482.5 c
[/DeviceRGB] cs 1.0 0.0 0.0 sc
S
n
3165.0 2490.0 m
3165.0 2473.43 3151.57 2460.0 3135.0 2460.0 c
3118.44 2460.0 3105.0 2473.43 3105.0 2490.0 c
3105.0 2506.57 3118.44 2520.0 3135.0 2520.0 c
3151.57 2520.0 3165.0 2506.57 3165.0 2490.0 c
S
n
3165.0 2497.5 m
3165.0 2480.93 3151.57 2467.5 3135.0 2467.5 c
3118.44 2467.5 3105.0 2480.93 3105.0 2497.5 c
3105.0 2514.07 3118.44 2527.5 3135.0 2527.5 c
3151.57 2527.5 3165.0 2514.07 3165.0 2497.5 c
S
n
3165.0 2505.0 m
3165.0 2488.43 3151.57 2475.0 3135.0 2475.0 c
3118.44 2475.0 3105.0 2488.43 3105.0 2505.0 c
3105.0 2521.57 3118.44 2535.0 3135.0 2535.0 c
3151.57 2535.0 3165.0 2521.57 3165.0 2505.0 c
S
n
3165.0 2520.0 m
3165.0 2503.43 3151.57 2490.0 3135.0 2490.0 c
3118.44 2490.0 3105.0 2503.43 3105.0 2520.0 c
3105.0 2536.57 3118.44 2550.0 3135.0 2550.0 c
3151.57 2550.0 3165.0 2536.57 3165.0 2520.0 c
S
n
3165.0 2535.0 m
3165.0 2518.43 3151.57 2505.0 3135.0 2505.0 c
3118.44 2505.0 3105.0 2518.43 3105.0 2535.0 c
3105.0 2551.57 3118.44 2565.0 3135.0 2565.0 c
3151.57 2565.0 3165.0 2551.57 3165.0 2535.0 c
S
n
3165.0 2550.0 m
3165.0 2533.43 3151.57 2520.0 3135.0 2520.0 c
3118.44 2520.0 3105.0 2533.43 3105.0 2550.0 c
3105.0 2566.57 3118.44 2580.0 3135.0 2580.0 c
3151.57 2580.0 3165.0 2566.57 3165.0 2550.0 c
S
n
3165.0 2565.0 m
3165.0 2548.43 3151.57 2535.0 3135.0 2535.0 c
3118.44 2535.0 3105.0 2548.43 3105.0 2565.0 c
3105.0 2581.57 3118.44 2595.0 3135.0 2595.0 c
3151.57 2595.0 3165.0 2581.57 3165.0 2565.0 c
S
n
3165.0 2647.5 m
3165.0 2630.93 3151.57 2617.5 3135.0 2617.5 c
3118.44 2617.5 3105.0 2630.93 3105.0 2647.5 c
3105.0 2664.07 3118.44 2677.5 3135.0 2677.5 c
3151.57 2677.5 3165.0 2664.07 3165.0 2647.5 c
S
n
3165.0 2722.5 m
3165.0 2705.94 3151.57 2692.5 3135.0 2692.5 c
3118.44 2692.5 3105.0 2705.94 3105.0 2722.5 c
3105.0 2739.07 3118.44 2752.5 3135.0 2752.5 c
3151.57 2752.5 3165.0 2739.07 3165.0 2722.5 c
S
n
3165.0 2797.5 m
3165.0 2780.94 3151.57 2767.5 3135.0 2767.5 c
3118.44 2767.5 3105.0 2780.94 3105.0 2797.5 c
3105.0 2814.07 3118.44 2827.5 3135.0 2827.5 c
3151.57 2827.5 3165.0 2814.07 3165.0 2797.5 c
S
n
3165.0 2872.5 m
3165.0 2855.94 3151.57 2842.5 3135.0 2842.5 c
3118.44 2842.5 3105.0 2855.94 3105.0 2872.5 c
3105.0 2889.07 3118.44 2902.5 3135.0 2902.5 c
3151.57 2902.5 3165.0 2889.07 3165.0 2872.5 c
S
n
3165.0 2955.0 m
3165.0 2938.44 3151.57 2925.0 3135.0 2925.0 c
3118.44 2925.0 3105.0 2938.44 3105.0 2955.0 c
3105.0 2971.57 3118.44 2985.0 3135.0 2985.0 c
3151.57 2985.0 3165.0 2971.57 3165.0 2955.0 c
S
n
3165.0 3030.0 m
3165.0 3013.44 3151.57 3000.0 3135.0 3000.0 c
3118.44 3000.0 3105.0 3013.44 3105.0 3030.0 c
3105.0 3046.57 3118.44 3060.0 3135.0 3060.0 c
3151.57 3060.0 3165.0 3046.57 3165.0 3030.0 c
S
n
3165.0 3105.0 m
3165.0 3088.44 3151.57 3075.0 3135.0 3075.0 c
3118.44 3075.0 3105.0 3088.44 3105.0 3105.0 c
3105.0 3121.57 3118.44 3135.0 3135.0 3135.0 c
3151.57 3135.0 3165.0 3121.57 3165.0 3105.0 c
S
n
3165.0 3180.0 m
3165.0 3163.44 3151.57 3150.0 3135.0 3150.0 c
3118.44 3150.0 3105.0 3163.44 3105.0 3180.0 c
3105.0 3196.57 3118.44 3210.0 3135.0 3210.0 c
3151.57 3210.0 3165.0 3196.57 3165.0 3180.0 c
S
n
3165.0 3262.5 m
3165.0 3245.94 3151.57 3232.5 3135.0 3232.5 c
3118.44 3232.5 3105.0 3245.94 3105.0 3262.5 c
3105.0 3279.07 3118.44 3292.5 3135.0 3292.5 c
3151.57 3292.5 3165.0 3279.07 3165.0 3262.5 c
S
n
3165.0 3337.5 m
3165.0 3320.94 3151.57 3307.5 3135.0 3307.5 c
3118.44 3307.5 3105.0 3320.94 3105.0 3337.5 c
3105.0 3354.07 3118.44 3367.5 3135.0 3367.5 c
3151.57 3367.5 3165.0 3354.07 3165.0 3337.5 c
S
n
3165.0 3412.5 m
3165.0 3395.94 3151.57 3382.5 3135.0 3382.5 c
3118.44 3382.5 3105.0 3395.94 3105.0 3412.5 c
3105.0 3429.07 3118.44 3442.5 3135.0 3442.5 c
3151.57 3442.5 3165.0 3429.07 3165.0 3412.5 c
S
n
3165.0 3495.0 m
3165.0 3478.44 3151.57 3465.0 3135.0 3465.0 c
3118.44 3465.0 3105.0 3478.44 3105.0 3495.0 c
3105.0 3511.57 3118.44 3525.0 3135.0 3525.0 c
3151.57 3525.0 3165.0 3511.57 3165.0 3495.0 c
S
n
3165.0 3570.0 m
3165.0 3553.44 3151.57 3540.0 3135.0 3540.0 c
3118.44 3540.0 3105.0 3553.44 3105.0 3570.0 c
3105.0 3586.57 3118.44 3600.0 3135.0 3600.0 c
3151.57 3600.0 3165.0 3586.57 3165.0 3570.0 c
S
n
3165.0 3645.0 m
3165.0 3628.44 3151.57 3615.0 3135.0 3615.0 c
3118.44 3615.0 3105.0 3628.44 3105.0 3645.0 c
3105.0 3661.57 3118.44 3675.0 3135.0 3675.0 c
3151.57 3675.0 3165.0 3661.57 3165.0 3645.0 c
S
n
3165.0 3720.0 m
3165.0 3703.44 3151.57 3690.0 3135.0 3690.0 c
3118.44 3690.0 3105.0 3703.44 3105.0 3720.0 c
3105.0 3736.57 3118.44 3750.0 3135.0 3750.0 c
3151.57 3750.0 3165.0 3736.57 3165.0 3720.0 c
S
n
3165.0 3802.5 m
3165.0 3785.94 3151.57 3772.5 3135.0 3772.5 c
3118.44 3772.5 3105.0 3785.94 3105.0 3802.5 c
3105.0 3819.07 3118.44 3832.5 3135.0 3832.5 c
3151.57 3832.5 3165.0 3819.07 3165.0 3802.5 c
S
n
3165.0 3877.5 m
3165.0 3860.94 3151.57 3847.5 3135.0 3847.5 c
3118.44 3847.5 3105.0 3860.94 3105.0 3877.5 c
3105.0 3894.07 3118.44 3907.5 3135.0 3907.5 c
3151.57 3907.5 3165.0 3894.07 3165.0 3877.5 c
S
n
3165.0 3952.5 m
3165.0 3935.94 3151.57 3922.5 3135.0 3922.5 c
3118.44 3922.5 3105.0 3935.94 3105.0 3952.5 c
3105.0 3969.07 3118.44 3982.5 3135.0 3982.5 c
3151.57 3982.5 3165.0 3969.07 3165.0 3952.5 c
S
n
3165.0 4027.5 m
3165.0 4010.94 3151.57 3997.5 3135.0 3997.5 c
3118.44 3997.5 3105.0 4010.94 3105.0 4027.5 c
3105.0 4044.07 3118.44 4057.5 3135.0 4057.5 c
3151.57 4057.5 3165.0 4044.07 3165.0 4027.5 c
S
n
3165.0 4110.0 m
3165.0 4093.44 3151.57 4080.0 3135.0 4080.0 c
3118.44 4080.0 3105.0 4093.44 3105.0 4110.0 c
3105.0 4126.57 3118.44 4140.0 3135.0 4140.0 c
3151.57 4140.0 3165.0 4126.57 3165.0 4110.0 c
S
n
3165.0 4185.0 m
3165.0 4168.44 3151.57 4155.0 3135.0 4155.0 c
3118.44 4155.0 3105.0 4168.44 3105.0 4185.0 c
3105.0 4201.57 3118.44 4215.0 3135.0 4215.0 c
3151.57 4215.0 3165.0 4201.57 3165.0 4185.0 c
S
n
3165.0 4260.0 m
3165.0 4243.44 3151.57 4230.0 3135.0 4230.0 c
3118.44 4230.0 3105.0 4243.44 3105.0 4260.0 c
3105.0 4276.57 3118.44 4290.0 3135.0 4290.0 c
3151.57 4290.0 3165.0 4276.57 3165.0 4260.0 c
S
n
3165.0 4342.51 m
3165.0 4325.94 3151.57 4312.51 3135.0 4312.51 c
3118.44 4312.51 3105.0 4325.94 3105.0 4342.51 c
3105.0 4359.07 3118.44 4372.51 3135.0 4372.51 c
3151.57 4372.51 3165.0 4359.07 3165.0 4342.51 c
S
n
3165.0 4417.51 m
3165.0 4400.94 3151.57 4387.51 3135.0 4387.51 c
3118.44 4387.51 3105.0 4400.94 3105.0 4417.51 c
3105.0 4434.07 3118.44 4447.51 3135.0 4447.51 c
3151.57 4447.51 3165.0 4434.07 3165.0 4417.51 c
S
n
3165.0 4492.51 m
3165.0 4475.94 3151.57 4462.51 3135.0 4462.51 c
3118.44 4462.51 3105.0 4475.94 3105.0 4492.51 c
3105.0 4509.07 3118.44 4522.51 3135.0 4522.51 c
3151.57 4522.51 3165.0 4509.07 3165.0 4492.51 c
S
n
3165.0 4567.51 m
3165.0 4550.94 3151.57 4537.51 3135.0 4537.51 c
3118.44 4537.51 3105.0 4550.94 3105.0 4567.51 c
3105.0 4584.07 3118.44 4597.51 3135.0 4597.51 c
3151.57 4597.51 3165.0 4584.07 3165.0 4567.51 c
S
n
3165.0 4650.01 m
3165.0 4633.44 3151.57 4620.01 3135.0 4620.01 c
3118.44 4620.01 3105.0 4633.44 3105.0 4650.01 c
3105.0 4666.57 3118.44 4680.01 3135.0 4680.01 c
3151.57 4680.01 3165.0 4666.57 3165.0 4650.01 c
S
n
3165.0 4725.01 m
3165.0 4708.44 3151.57 4695.01 3135.0 4695.01 c
3118.44 4695.01 3105.0 4708.44 3105.0 4725.01 c
3105.0 4741.57 3118.44 4755.01 3135.0 4755.01 c
3151.57 4755.01 3165.0 4741.57 3165.0 4725.01 c
S
n
3165.0 4800.01 m
3165.0 4783.44 3151.57 4770.01 3135.0 4770.01 c
3118.44 4770.01 3105.0 4783.44 3105.0 4800.01 c
3105.0 4816.57 3118.44 4830.01 3135.0 4830.01 c
3151.57 4830.01 3165.0 4816.57 3165.0 4800.01 c
S
n
3165.0 4882.51 m
3165.0 4865.94 3151.57 4852.51 3135.0 4852.51 c
3118.44 4852.51 3105.0 4865.94 3105.0 4882.51 c
3105.0 4899.07 3118.44 4912.51 3135.0 4912.51 c
3151.57 4912.51 3165.0 4899.07 3165.0 4882.51 c
S
n
3165.0 4957.51 m
3165.0 4940.94 3151.57 4927.51 3135.0 4927.51 c
3118.44 4927.51 3105.0 4940.94 3105.0 4957.51 c
3105.0 4974.07 3118.44 4987.51 3135.0 4987.51 c
3151.57 4987.51 3165.0 4974.07 3165.0 4957.51 c
S
n
3165.0 5032.51 m
3165.0 5015.94 3151.57 5002.51 3135.0 5002.51 c
3118.44 5002.51 3105.0 5015.94 3105.0 5032.51 c
3105.0 5049.07 3118.44 5062.51 3135.0 5062.51 c
3151.57 5062.51 3165.0 5049.07 3165.0 5032.51 c
S
n
3165.0 5107.51 m
3165.0 5090.94 3151.57 5077.51 3135.0 5077.51 c
3118.44 5077.51 3105.0 5090.94 3105.0 5107.51 c
3105.0 5124.07 3118.44 5137.51 3135.0 5137.51 c
3151.57 5137.51 3165.0 5124.07 3165.0 5107.51 c
S
n
3165.0 5190.01 m
3165.0 5173.44 3151.57 5160.01 3135.0 5160.01 c
3118.44 5160.01 3105.0 5173.44 3105.0 5190.01 c
3105.0 5206.57 3118.44 5220.01 3135.0 5220.01 c
3151.57 5220.01 3165.0 5206.57 3165.0 5190.01 c
S
n
3165.0 5265.01 m
3165.0 5248.44 3151.57 5235.01 3135.0 5235.01 c
3118.44 5235.01 3105.0 5248.44 3105.0 5265.01 c
3105.0 5281.57 3118.44 5295.01 3135.0 5295.01 c
3151.57 5295.01 3165.0 5281.57 3165.0 5265.01 c
S
n
3165.0 5340.01 m
3165.0 5323.44 3151.57 5310.01 3135.0 5310.01 c
3118.44 5310.01 3105.0 5323.44 3105.0 5340.01 c
3105.0 5356.57 3118.44 5370.01 3135.0 5370.01 c
3151.57 5370.01 3165.0 5356.57 3165.0 5340.01 c
S
n
3165.0 5400.01 m
3165.0 5383.44 3151.57 5370.01 3135.0 5370.01 c
3118.44 5370.01 3105.0 5383.44 3105.0 5400.01 c
3105.0 5416.57 3118.44 5430.01 3135.0 5430.01 c
3151.57 5430.01 3165.0 5416.57 3165.0 5400.01 c
S
n
3165.0 5452.51 m
3165.0 5435.94 3151.57 5422.51 3135.0 5422.51 c
3118.44 5422.51 3105.0 5435.94 3105.0 5452.51 c
3105.0 5469.07 3118.44 5482.51 3135.0 5482.51 c
3151.57 5482.51 3165.0 5469.07 3165.0 5452.51 c
S
n
3165.0 5512.51 m
3165.0 5495.94 3151.57 5482.51 3135.0 5482.51 c
3118.44 5482.51 3105.0 5495.94 3105.0 5512.51 c
3105.0 5529.07 3118.44 5542.51 3135.0 5542.51 c
3151.57 5542.51 3165.0 5529.07 3165.0 5512.51 c
S
n
3165.0 5565.01 m
3165.0 5548.44 3151.57 5535.01 3135.0 5535.01 c
3118.44 5535.01 3105.0 5548.44 3105.0 5565.01 c
3105.0 5581.57 3118.44 5595.01 3135.0 5595.01 c
3151.57 5595.01 3165.0 5581.57 3165.0 5565.01 c
S
n
1537.5 2482.5 m
1537.5 2465.93 1524.07 2452.5 1507.5 2452.5 c
1490.93 2452.5 1477.5 2465.93 1477.5 2482.5 c
1477.5 2499.07 1490.93 2512.5 1507.5 2512.5 c
1524.07 2512.5 1537.5 2499.07 1537.5 2482.5 c
S
n
1537.5 2490.0 m
1537.5 2473.43 1524.07 2460.0 1507.5 2460.0 c
1490.93 2460.0 1477.5 2473.43 1477.5 2490.0 c
1477.5 2506.57 1490.93 2520.0 1507.5 2520.0 c
1524.07 2520.0 1537.5 2506.57 1537.5 2490.0 c
S
n
1537.5 2497.5 m
1537.5 2480.93 1524.07 2467.5 1507.5 2467.5 c
1490.93 2467.5 1477.5 2480.93 1477.5 2497.5 c
1477.5 2514.07 1490.93 2527.5 1507.5 2527.5 c
1524.07 2527.5 1537.5 2514.07 1537.5 2497.5 c
S
n
1545.0 2512.5 m
1545.0 2495.93 1531.57 2482.5 1515.0 2482.5 c
1498.43 2482.5 1485.0 2495.93 1485.0 2512.5 c
1485.0 2529.07 1498.43 2542.5 1515.0 2542.5 c
1531.57 2542.5 1545.0 2529.07 1545.0 2512.5 c
S
n
1545.0 2527.5 m
1545.0 2510.93 1531.57 2497.5 1515.0 2497.5 c
1498.43 2497.5 1485.0 2510.93 1485.0 2527.5 c
1485.0 2544.07 1498.43 2557.5 1515.0 2557.5 c
1531.57 2557.5 1545.0 2544.07 1545.0 2527.5 c
S
n
1552.5 2542.5 m
1552.5 2525.93 1539.07 2512.5 1522.5 2512.5 c
1505.93 2512.5 1492.5 2525.93 1492.5 2542.5 c
1492.5 2559.07 1505.93 2572.5 1522.5 2572.5 c
1539.07 2572.5 1552.5 2559.07 1552.5 2542.5 c
S
n
1560.0 2565.0 m
1560.0 2548.43 1546.57 2535.0 1530.0 2535.0 c
1513.43 2535.0 1500.0 2548.43 1500.0 2565.0 c
1500.0 2581.57 1513.43 2595.0 1530.0 2595.0 c
1546.57 2595.0 1560.0 2581.57 1560.0 2565.0 c
S
n
1567.5 2587.5 m
1567.5 2570.93 1554.07 2557.5 1537.5 2557.5 c
1520.93 2557.5 1507.5 2570.93 1507.5 2587.5 c
1507.5 2604.07 1520.93 2617.5 1537.5 2617.5 c
1554.07 2617.5 1567.5 2604.07 1567.5 2587.5 c
S
n
1575.0 2610.0 m
1575.0 2593.43 1561.57 2580.0 1545.0 2580.0 c
1528.43 2580.0 1515.0 2593.43 1515.0 2610.0 c
1515.0 2626.57 1528.43 2640.0 1545.0 2640.0 c
1561.57 2640.0 1575.0 2626.57 1575.0 2610.0 c
S
n
1582.5 2640.0 m
1582.5 2623.43 1569.07 2610.0 1552.5 2610.0 c
1535.93 2610.0 1522.5 2623.43 1522.5 2640.0 c
1522.5 2656.57 1535.93 2670.0 1552.5 2670.0 c
1569.07 2670.0 1582.5 2656.57 1582.5 2640.0 c
S
n
1590.0 2670.0 m
1590.0 2653.43 1576.57 2640.0 1560.0 2640.0 c
1543.43 2640.0 1530.0 2653.43 1530.0 2670.0 c
1530.0 2686.57 1543.43 2700.0 1560.0 2700.0 c
1576.57 2700.0 1590.0 2686.57 1590.0 2670.0 c
S
n
1597.5 2707.5 m
1597.5 2690.94 1584.07 2677.5 1567.5 2677.5 c
1550.93 2677.5 1537.5 2690.94 1537.5 2707.5 c
1537.5 2724.07 1550.93 2737.5 1567.5 2737.5 c
1584.07 2737.5 1597.5 2724.07 1597.5 2707.5 c
S
n
1612.5 2737.5 m
1612.5 2720.94 1599.07 2707.5 1582.5 2707.5 c
1565.93 2707.5 1552.5 2720.94 1552.5 2737.5 c
1552.5 2754.07 1565.93 2767.5 1582.5 2767.5 c
1599.07 2767.5 1612.5 2754.07 1612.5 2737.5 c
S
n
1620.0 2775.0 m
1620.0 2758.44 1606.57 2745.0 1590.0 2745.0 c
1573.43 2745.0 1560.0 2758.44 1560.0 2775.0 c
1560.0 2791.57 1573.43 2805.0 1590.0 2805.0 c
1606.57 2805.0 1620.0 2791.57 1620.0 2775.0 c
S
n
1635.0 2820.0 m
1635.0 2803.44 1621.57 2790.0 1605.0 2790.0 c
1588.43 2790.0 1575.0 2803.44 1575.0 2820.0 c
1575.0 2836.57 1588.43 2850.0 1605.0 2850.0 c
1621.57 2850.0 1635.0 2836.57 1635.0 2820.0 c
S
n
1642.5 2857.5 m
1642.5 2840.94 1629.07 2827.5 1612.5 2827.5 c
1595.93 2827.5 1582.5 2840.94 1582.5 2857.5 c
1582.5 2874.07 1595.93 2887.5 1612.5 2887.5 c
1629.07 2887.5 1642.5 2874.07 1642.5 2857.5 c
S
n
1657.5 2902.5 m
1657.5 2885.94 1644.07 2872.5 1627.5 2872.5 c
1610.93 2872.5 1597.5 2885.94 1597.5 2902.5 c
1597.5 2919.07 1610.93 2932.5 1627.5 2932.5 c
1644.07 2932.5 1657.5 2919.07 1657.5 2902.5 c
S
n
1672.5 2955.0 m
1672.5 2938.44 1659.07 2925.0 1642.5 2925.0 c
1625.93 2925.0 1612.5 2938.44 1612.5 2955.0 c
1612.5 2971.57 1625.93 2985.0 1642.5 2985.0 c
1659.07 2985.0 1672.5 2971.57 1672.5 2955.0 c
S
n
1680.0 3000.0 m
1680.0 2983.44 1666.57 2970.0 1650.0 2970.0 c
1633.43 2970.0 1620.0 2983.44 1620.0 3000.0 c
1620.0 3016.57 1633.43 3030.0 1650.0 3030.0 c
1666.57 3030.0 1680.0 3016.57 1680.0 3000.0 c
S
n
1695.0 3052.5 m
1695.0 3035.94 1681.57 3022.5 1665.0 3022.5 c
1648.43 3022.5 1635.0 3035.94 1635.0 3052.5 c
1635.0 3069.07 1648.43 3082.5 1665.0 3082.5 c
1681.57 3082.5 1695.0 3069.07 1695.0 3052.5 c
S
n
1710.0 3105.0 m
1710.0 3088.44 1696.57 3075.0 1680.0 3075.0 c
1663.43 3075.0 1650.0 3088.44 1650.0 3105.0 c
1650.0 3121.57 1663.43 3135.0 1680.0 3135.0 c
1696.57 3135.0 1710.0 3121.57 1710.0 3105.0 c
S
n
1725.0 3157.5 m
1725.0 3140.94 1711.57 3127.5 1695.0 3127.5 c
1678.43 3127.5 1665.0 3140.94 1665.0 3157.5 c
1665.0 3174.07 1678.43 3187.5 1695.0 3187.5 c
1711.57 3187.5 1725.0 3174.07 1725.0 3157.5 c
S
n
1732.5 3217.5 m
1732.5 3200.94 1719.07 3187.5 1702.5 3187.5 c
1685.93 3187.5 1672.5 3200.94 1672.5 3217.5 c
1672.5 3234.07 1685.93 3247.5 1702.5 3247.5 c
1719.07 3247.5 1732.5 3234.07 1732.5 3217.5 c
S
n
1747.5 3270.0 m
1747.5 3253.44 1734.07 3240.0 1717.5 3240.0 c
1700.93 3240.0 1687.5 3253.44 1687.5 3270.0 c
1687.5 3286.57 1700.93 3300.0 1717.5 3300.0 c
1734.07 3300.0 1747.5 3286.57 1747.5 3270.0 c
S
n
1762.5 3330.0 m
1762.5 3313.44 1749.07 3300.0 1732.5 3300.0 c
1715.93 3300.0 1702.5 3313.44 1702.5 3330.0 c
1702.5 3346.57 1715.93 3360.0 1732.5 3360.0 c
1749.07 3360.0 1762.5 3346.57 1762.5 3330.0 c
S
n
1777.5 3390.0 m
1777.5 3373.44 1764.07 3360.0 1747.5 3360.0 c
1730.93 3360.0 1717.5 3373.44 1717.5 3390.0 c
1717.5 3406.57 1730.93 3420.0 1747.5 3420.0 c
1764.07 3420.0 1777.5 3406.57 1777.5 3390.0 c
S
n
1792.5 3457.5 m
1792.5 3440.94 1779.07 3427.5 1762.5 3427.5 c
1745.93 3427.5 1732.5 3440.94 1732.5 3457.5 c
1732.5 3474.07 1745.93 3487.5 1762.5 3487.5 c
1779.07 3487.5 1792.5 3474.07 1792.5 3457.5 c
S
n
1807.5 3517.5 m
1807.5 3500.94 1794.07 3487.5 1777.5 3487.5 c
1760.93 3487.5 1747.5 3500.94 1747.5 3517.5 c
1747.5 3534.07 1760.93 3547.5 1777.5 3547.5 c
1794.07 3547.5 1807.5 3534.07 1807.5 3517.5 c
S
n
1822.5 3585.0 m
1822.5 3568.44 1809.07 3555.0 1792.5 3555.0 c
1775.93 3555.0 1762.5 3568.44 1762.5 3585.0 c
1762.5 3601.57 1775.93 3615.0 1792.5 3615.0 c
1809.07 3615.0 1822.5 3601.57 1822.5 3585.0 c
S
n
1837.5 3645.0 m
1837.5 3628.44 1824.07 3615.0 1807.5 3615.0 c
1790.93 3615.0 1777.5 3628.44 1777.5 3645.0 c
1777.5 3661.57 1790.93 3675.0 1807.5 3675.0 c
1824.07 3675.0 1837.5 3661.57 1837.5 3645.0 c
S
n
1845.0 3712.5 m
1845.0 3695.94 1831.57 3682.5 1815.0 3682.5 c
1798.43 3682.5 1785.0 3695.94 1785.0 3712.5 c
1785.0 3729.07 1798.43 3742.5 1815.0 3742.5 c
1831.57 3742.5 1845.0 3729.07 1845.0 3712.5 c
S
n
1860.0 3780.0 m
1860.0 3763.44 1846.57 3750.0 1830.0 3750.0 c
1813.43 3750.0 1800.0 3763.44 1800.0 3780.0 c
1800.0 3796.57 1813.43 3810.0 1830.0 3810.0 c
1846.57 3810.0 1860.0 3796.57 1860.0 3780.0 c
S
n
1875.0 3855.0 m
1875.0 3838.44 1861.57 3825.0 1845.0 3825.0 c
1828.43 3825.0 1815.0 3838.44 1815.0 3855.0 c
1815.0 3871.57 1828.43 3885.0 1845.0 3885.0 c
1861.57 3885.0 1875.0 3871.57 1875.0 3855.0 c
S
n
1890.0 3922.5 m
1890.0 3905.94 1876.57 3892.5 1860.0 3892.5 c
1843.43 3892.5 1830.0 3905.94 1830.0 3922.5 c
1830.0 3939.07 1843.43 3952.5 1860.0 3952.5 c
1876.57 3952.5 1890.0 3939.07 1890.0 3922.5 c
S
n
1905.0 3990.0 m
1905.0 3973.44 1891.57 3960.0 1875.0 3960.0 c
1858.43 3960.0 1845.0 3973.44 1845.0 3990.0 c
1845.0 4006.57 1858.43 4020.0 1875.0 4020.0 c
1891.57 4020.0 1905.0 4006.57 1905.0 3990.0 c
S
n
1912.5 4065.0 m
1912.5 4048.44 1899.07 4035.0 1882.5 4035.0 c
1865.93 4035.0 1852.5 4048.44 1852.5 4065.0 c
1852.5 4081.57 1865.93 4095.0 1882.5 4095.0 c
1899.07 4095.0 1912.5 4081.57 1912.5 4065.0 c
S
n
1927.5 4140.0 m
1927.5 4123.44 1914.07 4110.0 1897.5 4110.0 c
1880.93 4110.0 1867.5 4123.44 1867.5 4140.0 c
1867.5 4156.57 1880.93 4170.0 1897.5 4170.0 c
1914.07 4170.0 1927.5 4156.57 1927.5 4140.0 c
S
n
1935.0 4192.5 m
1935.0 4175.94 1921.57 4162.5 1905.0 4162.5 c
1888.43 4162.5 1875.0 4175.94 1875.0 4192.5 c
1875.0 4209.07 1888.43 4222.5 1905.0 4222.5 c
1921.57 4222.5 1935.0 4209.07 1935.0 4192.5 c
S
n
1942.5 4245.0 m
1942.5 4228.44 1929.07 4215.0 1912.5 4215.0 c
1895.93 4215.0 1882.5 4228.44 1882.5 4245.0 c
1882.5 4261.57 1895.93 4275.0 1912.5 4275.0 c
1929.07 4275.0 1942.5 4261.57 1942.5 4245.0 c
S
n
1950.0 4297.51 m
1950.0 4280.94 1936.57 4267.51 1920.0 4267.51 c
1903.43 4267.51 1890.0 4280.94 1890.0 4297.51 c
1890.0 4314.07 1903.43 4327.51 1920.0 4327.51 c
1936.57 4327.51 1950.0 4314.07 1950.0 4297.51 c
S
n
1957.5 4350.01 m
1957.5 4333.44 1944.07 4320.01 1927.5 4320.01 c
1910.93 4320.01 1897.5 4333.44 1897.5 4350.01 c
1897.5 4366.57 1910.93 4380.01 1927.5 4380.01 c
1944.07 4380.01 1957.5 4366.57 1957.5 4350.01 c
S
n
4792.51 2482.5 m
4792.51 2465.93 4779.07 2452.5 4762.51 2452.5 c
4745.94 2452.5 4732.51 2465.93 4732.51 2482.5 c
4732.51 2499.07 4745.94 2512.5 4762.51 2512.5 c
4779.07 2512.5 4792.51 2499.07 4792.51 2482.5 c
S
n
4785.01 2490.0 m
4785.01 2473.43 4771.57 2460.0 4755.01 2460.0 c
4738.44 2460.0 4725.01 2473.43 4725.01 2490.0 c
4725.01 2506.57 4738.44 2520.0 4755.01 2520.0 c
4771.57 2520.0 4785.01 2506.57 4785.01 2490.0 c
S
n
4785.01 2497.5 m
4785.01 2480.93 4771.57 2467.5 4755.01 2467.5 c
4738.44 2467.5 4725.01 2480.93 4725.01 2497.5 c
4725.01 2514.07 4738.44 2527.5 4755.01 2527.5 c
4771.57 2527.5 4785.01 2514.07 4785.01 2497.5 c
S
n
4777.51 2512.5 m
4777.51 2495.93 4764.07 2482.5 4747.51 2482.5 c
4730.94 2482.5 4717.51 2495.93 4717.51 2512.5 c
4717.51 2529.07 4730.94 2542.5 4747.51 2542.5 c
4764.07 2542.5 4777.51 2529.07 4777.51 2512.5 c
S
n
4777.51 2527.5 m
4777.51 2510.93 4764.07 2497.5 4747.51 2497.5 c
4730.94 2497.5 4717.51 2510.93 4717.51 2527.5 c
4717.51 2544.07 4730.94 2557.5 4747.51 2557.5 c
4764.07 2557.5 4777.51 2544.07 4777.51 2527.5 c
S
n
4770.01 2542.5 m
4770.01 2525.93 4756.57 2512.5 4740.01 2512.5 c
4723.44 2512.5 4710.01 2525.93 4710.01 2542.5 c
4710.01 2559.07 4723.44 2572.5 4740.01 2572.5 c
4756.57 2572.5 4770.01 2559.07 4770.01 2542.5 c
S
n
4762.51 2565.0 m
4762.51 2548.43 4749.07 2535.0 4732.51 2535.0 c
4715.94 2535.0 4702.51 2548.43 4702.51 2565.0 c
4702.51 2581.57 4715.94 2595.0 4732.51 2595.0 c
4749.07 2595.0 4762.51 2581.57 4762.51 2565.0 c
S
n
4755.01 2587.5 m
4755.01 2570.93 4741.57 2557.5 4725.01 2557.5 c
4708.44 2557.5 4695.01 2570.93 4695.01 2587.5 c
4695.01 2604.07 4708.44 2617.5 4725.01 2617.5 c
4741.57 2617.5 4755.01 2604.07 4755.01 2587.5 c
S
n
4747.51 2610.0 m
4747.51 2593.43 4734.07 2580.0 4717.51 2580.0 c
4700.94 2580.0 4687.51 2593.43 4687.51 2610.0 c
4687.51 2626.57 4700.94 2640.0 4717.51 2640.0 c
4734.07 2640.0 4747.51 2626.57 4747.51 2610.0 c
S
n
4740.01 2640.0 m
4740.01 2623.43 4726.57 2610.0 4710.01 2610.0 c
4693.44 2610.0 4680.01 2623.43 4680.01 2640.0 c
4680.01 2656.57 4693.44 2670.0 4710.01 2670.0 c
4726.57 2670.0 4740.01 2656.57 4740.01 2640.0 c
S
n
4732.51 2670.0 m
4732.51 2653.43 4719.07 2640.0 4702.51 2640.0 c
4685.94 2640.0 4672.51 2653.43 4672.51 2670.0 c
4672.51 2686.57 4685.94 2700.0 4702.51 2700.0 c
4719.07 2700.0 4732.51 2686.57 4732.51 2670.0 c
S
n
4725.01 2707.5 m
4725.01 2690.94 4711.57 2677.5 4695.01 2677.5 c
4678.44 2677.5 4665.01 2690.94 4665.01 2707.5 c
4665.01 2724.07 4678.44 2737.5 4695.01 2737.5 c
4711.57 2737.5 4725.01 2724.07 4725.01 2707.5 c
S
n
4710.01 2737.5 m
4710.01 2720.94 4696.57 2707.5 4680.01 2707.5 c
4663.44 2707.5 4650.01 2720.94 4650.01 2737.5 c
4650.01 2754.07 4663.44 2767.5 4680.01 2767.5 c
4696.57 2767.5 4710.01 2754.07 4710.01 2737.5 c
S
n
4702.51 2775.0 m
4702.51 2758.44 4689.07 2745.0 4672.51 2745.0 c
4655.94 2745.0 4642.51 2758.44 4642.51 2775.0 c
4642.51 2791.57 4655.94 2805.0 4672.51 2805.0 c
4689.07 2805.0 4702.51 2791.57 4702.51 2775.0 c
S
n
4687.51 2820.0 m
4687.51 2803.44 4674.07 2790.0 4657.51 2790.0 c
4640.94 2790.0 4627.51 2803.44 4627.51 2820.0 c
4627.51 2836.57 4640.94 2850.0 4657.51 2850.0 c
4674.07 2850.0 4687.51 2836.57 4687.51 2820.0 c
S
n
4680.01 2857.5 m
4680.01 2840.94 4666.57 2827.5 4650.01 2827.5 c
4633.44 2827.5 4620.01 2840.94 4620.01 2857.5 c
4620.01 2874.07 4633.44 2887.5 4650.01 2887.5 c
4666.57 2887.5 4680.01 2874.07 4680.01 2857.5 c
S
n
4665.01 2902.5 m
4665.01 2885.94 4651.57 2872.5 4635.01 2872.5 c
4618.44 2872.5 4605.01 2885.94 4605.01 2902.5 c
4605.01 2919.07 4618.44 2932.5 4635.01 2932.5 c
4651.57 2932.5 4665.01 2919.07 4665.01 2902.5 c
S
n
4650.01 2955.0 m
4650.01 2938.44 4636.57 2925.0 4620.01 2925.0 c
4603.44 2925.0 4590.01 2938.44 4590.01 2955.0 c
4590.01 2971.57 4603.44 2985.0 4620.01 2985.0 c
4636.57 2985.0 4650.01 2971.57 4650.01 2955.0 c
S
n
4642.51 3000.0 m
4642.51 2983.44 4629.07 2970.0 4612.51 2970.0 c
4595.94 2970.0 4582.51 2983.44 4582.51 3000.0 c
4582.51 3016.57 4595.94 3030.0 4612.51 3030.0 c
4629.07 3030.0 4642.51 3016.57 4642.51 3000.0 c
S
n
4627.51 3052.5 m
4627.51 3035.94 4614.07 3022.5 4597.51 3022.5 c
4580.94 3022.5 4567.51 3035.94 4567.51 3052.5 c
4567.51 3069.07 4580.94 3082.5 4597.51 3082.5 c
4614.07 3082.5 4627.51 3069.07 4627.51 3052.5 c
S
n
4612.51 3105.0 m
4612.51 3088.44 4599.07 3075.0 4582.51 3075.0 c
4565.94 3075.0 4552.51 3088.44 4552.51 3105.0 c
4552.51 3121.57 4565.94 3135.0 4582.51 3135.0 c
4599.07 3135.0 4612.51 3121.57 4612.51 3105.0 c
S
n
4597.51 3157.5 m
4597.51 3140.94 4584.07 3127.5 4567.51 3127.5 c
4550.94 3127.5 4537.51 3140.94 4537.51 3157.5 c
4537.51 3174.07 4550.94 3187.5 4567.51 3187.5 c
4584.07 3187.5 4597.51 3174.07 4597.51 3157.5 c
S
n
4590.01 3217.5 m
4590.01 3200.94 4576.57 3187.5 4560.01 3187.5 c
4543.44 3187.5 4530.01 3200.94 4530.01 3217.5 c
4530.01 3234.07 4543.44 3247.5 4560.01 3247.5 c
4576.57 3247.5 4590.01 3234.07 4590.01 3217.5 c
S
n
4575.01 3270.0 m
4575.01 3253.44 4561.57 3240.0 4545.01 3240.0 c
4528.44 3240.0 4515.01 3253.44 4515.01 3270.0 c
4515.01 3286.57 4528.44 3300.0 4545.01 3300.0 c
4561.57 3300.0 4575.01 3286.57 4575.01 3270.0 c
S
n
4560.01 3330.0 m
4560.01 3313.44 4546.57 3300.0 4530.01 3300.0 c
4513.44 3300.0 4500.01 3313.44 4500.01 3330.0 c
4500.01 3346.57 4513.44 3360.0 4530.01 3360.0 c
4546.57 3360.0 4560.01 3346.57 4560.01 3330.0 c
S
n
4545.01 3390.0 m
4545.01 3373.44 4531.57 3360.0 4515.01 3360.0 c
4498.44 3360.0 4485.01 3373.44 4485.01 3390.0 c
4485.01 3406.57 4498.44 3420.0 4515.01 3420.0 c
4531.57 3420.0 4545.01 3406.57 4545.01 3390.0 c
S
n
4530.01 3457.5 m
4530.01 3440.94 4516.57 3427.5 4500.01 3427.5 c
4483.44 3427.5 4470.01 3440.94 4470.01 3457.5 c
4470.01 3474.07 4483.44 3487.5 4500.01 3487.5 c
4516.57 3487.5 4530.01 3474.07 4530.01 3457.5 c
S
n
4515.01 3517.5 m
4515.01 3500.94 4501.57 3487.5 4485.01 3487.5 c
4468.44 3487.5 4455.01 3500.94 4455.01 3517.5 c
4455.01 3534.07 4468.44 3547.5 4485.01 3547.5 c
4501.57 3547.5 4515.01 3534.07 4515.01 3517.5 c
S
n
4500.01 3585.0 m
4500.01 3568.44 4486.57 3555.0 4470.01 3555.0 c
4453.44 3555.0 4440.01 3568.44 4440.01 3585.0 c
4440.01 3601.57 4453.44 3615.0 4470.01 3615.0 c
4486.57 3615.0 4500.01 3601.57 4500.01 3585.0 c
S
n
4485.01 3645.0 m
4485.01 3628.44 4471.57 3615.0 4455.01 3615.0 c
4438.44 3615.0 4425.01 3628.44 4425.01 3645.0 c
4425.01 3661.57 4438.44 3675.0 4455.01 3675.0 c
4471.57 3675.0 4485.01 3661.57 4485.01 3645.0 c
S
n
4477.51 3712.5 m
4477.51 3695.94 4464.07 3682.5 4447.51 3682.5 c
4430.94 3682.5 4417.51 3695.94 4417.51 3712.5 c
4417.51 3729.07 4430.94 3742.5 4447.51 3742.5 c
4464.07 3742.5 4477.51 3729.07 4477.51 3712.5 c
S
n
4462.51 3780.0 m
4462.51 3763.44 4449.07 3750.0 4432.51 3750.0 c
4415.94 3750.0 4402.51 3763.44 4402.51 3780.0 c
4402.51 3796.57 4415.94 3810.0 4432.51 3810.0 c
4449.07 3810.0 4462.51 3796.57 4462.51 3780.0 c
S
n
4447.51 3855.0 m
4447.51 3838.44 4434.07 3825.0 4417.51 3825.0 c
4400.94 3825.0 4387.51 3838.44 4387.51 3855.0 c
4387.51 3871.57 4400.94 3885.0 4417.51 3885.0 c
4434.07 3885.0 4447.51 3871.57 4447.51 3855.0 c
S
n
4432.51 3922.5 m
4432.51 3905.94 4419.07 3892.5 4402.51 3892.5 c
4385.94 3892.5 4372.51 3905.94 4372.51 3922.5 c
4372.51 3939.07 4385.94 3952.5 4402.51 3952.5 c
4419.07 3952.5 4432.51 3939.07 4432.51 3922.5 c
S
n
4417.51 3990.0 m
4417.51 3973.44 4404.07 3960.0 4387.51 3960.0 c
4370.94 3960.0 4357.51 3973.44 4357.51 3990.0 c
4357.51 4006.57 4370.94 4020.0 4387.51 4020.0 c
4404.07 4020.0 4417.51 4006.57 4417.51 3990.0 c
S
n
4410.01 4065.0 m
4410.01 4048.44 4396.57 4035.0 4380.01 4035.0 c
4363.44 4035.0 4350.01 4048.44 4350.01 4065.0 c
4350.01 4081.57 4363.44 4095.0 4380.01 4095.0 c
4396.57 4095.0 4410.01 4081.57 4410.01 4065.0 c
S
n
4395.01 4140.0 m
4395.01 4123.44 4381.57 4110.0 4365.01 4110.0 c
4348.44 4110.0 4335.01 4123.44 4335.01 4140.0 c
4335.01 4156.57 4348.44 4170.0 4365.01 4170.0 c
4381.57 4170.0 4395.01 4156.57 4395.01 4140.0 c
S
n
4387.51 4192.5 m
4387.51 4175.94 4374.07 4162.5 4357.51 4162.5 c
4340.94 4162.5 4327.51 4175.94 4327.51 4192.5 c
4327.51 4209.07 4340.94 4222.5 4357.51 4222.5 c
4374.07 4222.5 4387.51 4209.07 4387.51 4192.5 c
S
n
4380.01 4245.0 m
4380.01 4228.44 4366.57 4215.0 4350.01 4215.0 c
4333.44 4215.0 4320.01 4228.44 4320.01 4245.0 c
4320.01 4261.57 4333.44 4275.0 4350.01 4275.0 c
4366.57 4275.0 4380.01 4261.57 4380.01 4245.0 c
S
n
4372.51 4297.51 m
4372.51 4280.94 4359.07 4267.51 4342.51 4267.51 c
4325.94 4267.51 4312.51 4280.94 4312.51 4297.51 c
4312.51 4314.07 4325.94 4327.51 4342.51 4327.51 c
4359.07 4327.51 4372.51 4314.07 4372.51 4297.51 c
S
n
4365.01 4350.01 m
4365.01 4333.44 4351.57 4320.01 4335.01 4320.01 c
4318.44 4320.01 4305.01 4333.44 4305.01 4350.01 c
4305.01 4366.57 4318.44 4380.01 4335.01 4380.01 c
4351.57 4380.01 4365.01 4366.57 4365.01 4350.01 c
S
n
3105.0 2482.5 m
3165.0 2482.5 l
0.0 1.0 0.0 sc
S
n
3135.0 2512.5 m
3135.0 2452.5 l
S
n
3105.0 2490.0 m
3165.0 2490.0 l
S
n
3135.0 2520.0 m
3135.0 2460.0 l
S
n
3105.0 2497.5 m
3165.0 2497.5 l
S
n
3135.0 2527.5 m
3135.0 2467.5 l
S
n
3105.0 2505.0 m
3165.0 2505.0 l
S
n
3135.0 2535.0 m
3135.0 2475.0 l
S
n
3105.0 2520.0 m
3165.0 2520.0 l
S
n
3135.0 2550.0 m
3135.0 2490.0 l
S
n
3105.0 2535.0 m
3165.0 2535.0 l
S
n
3135.0 2565.0 m
3135.0 2505.0 l
S
n
3105.0 2550.0 m
3165.0 2550.0 l
S
n
3135.0 2580.0 m
3135.0 2520.0 l
S
n
3105.0 2565.0 m
3165.0 2565.0 l
S
n
3135.0 2595.0 m
3135.0 2535.0 l
S
n
3105.0 2647.5 m
3165.0 2647.5 l
S
n
3135.0 2677.5 m
3135.0 2617.5 l
S
n
3105.0 2722.5 m
3165.0 2722.5 l
S
n
3135.0 2752.5 m
3135.0 2692.5 l
S
n
3105.0 2797.5 m
3165.0 2797.5 l
S
n
3135.0 2827.5 m
3135.0 2767.5 l
S
n
3105.0 2872.5 m
3165.0 2872.5 l
S
n
3135.0 2902.5 m
3135.0 2842.5 l
S
n
3105.0 2955.0 m
3165.0 2955.0 l
S
n
3135.0 2985.0 m
3135.0 2925.0 l
S
n
3105.0 3030.0 m
3165.0 3030.0 l
S
n
3135.0 3060.0 m
3135.0 3000.0 l
S
n
3105.0 3105.0 m
3165.0 3105.0 l
S
n
3135.0 3135.0 m
3135.0 3075.0 l
S
n
3105.0 3180.0 m
3165.0 3180.0 l
S
n
3135.0 3210.0 m
3135.0 3150.0 l
S
n
3105.0 3262.5 m
3165.0 3262.5 l
S
n
3135.0 3292.5 m
3135.0 3232.5 l
S
n
3105.0 3337.5 m
3165.0 3337.5 l
S
n
3135.0 3367.5 m
3135.0 3307.5 l
S
n
3105.0 3412.5 m
3165.0 3412.5 l
S
n
3135.0 3442.5 m
3135.0 3382.5 l
S
n
3105.0 3495.01 m
3165.0 3495.01 l
S
n
3135.0 3525.01 m
3135.0 3465.0 l
S
n
3105.0 3570.01 m
3165.0 3570.01 l
S
n
3135.0 3600.01 m
3135.0 3540.01 l
S
n
3105.0 3645.01 m
3165.0 3645.01 l
S
n
3135.0 3675.01 m
3135.0 3615.01 l
S
n
3105.0 3720.01 m
3165.0 3720.01 l
S
n
3135.0 3750.01 m
3135.0 3690.01 l
S
n
3105.0 3802.51 m
3165.0 3802.51 l
S
n
3135.0 3832.51 m
3135.0 3772.51 l
S
n
3105.0 3877.51 m
3165.0 3877.51 l
S
n
3135.0 3907.51 m
3135.0 3847.51 l
S
n
3105.0 3952.51 m
3165.0 3952.51 l
S
n
3135.0 3982.51 m
3135.0 3922.51 l
S
n
3105.0 4027.51 m
3165.0 4027.51 l
S
n
3135.0 4057.51 m
3135.0 3997.51 l
S
n
3105.0 4110.01 m
3165.0 4110.01 l
S
n
3135.0 4140.01 m
3135.0 4080.01 l
S
n
3105.0 4185.01 m
3165.0 4185.01 l
S
n
3135.0 4215.01 m
3135.0 4155.01 l
S
n
3105.0 4260.01 m
3165.0 4260.01 l
S
n
3135.0 4290.01 m
3135.0 4230.01 l
S
n
3105.0 4342.51 m
3165.0 4342.51 l
S
n
3135.0 4372.51 m
3135.0 4312.51 l
S
n
3105.0 4417.51 m
3165.0 4417.51 l
S
n
3135.0 4447.51 m
3135.0 4387.51 l
S
n
3105.0 4492.51 m
3165.0 4492.51 l
S
n
3135.0 4522.51 m
3135.0 4462.51 l
S
n
3105.0 4567.51 m
3165.0 4567.51 l
S
n
3135.0 4597.51 m
3135.0 4537.51 l
S
n
3105.0 4650.01 m
3165.0 4650.01 l
S
n
3135.0 4680.01 m
3135.0 4620.01 l
S
n
3105.0 4725.01 m
3165.0 4725.01 l
S
n
3135.0 4755.01 m
3135.0 4695.01 l
S
n
3105.0 4800.01 m
3165.0 4800.01 l
S
n
3135.0 4830.01 m
3135.0 4770.01 l
S
n
3105.0 4882.51 m
3165.0 4882.51 l
S
n
3135.0 4912.51 m
3135.0 4852.51 l
S
n
3105.0 4957.51 m
3165.0 4957.51 l
S
n
3135.0 4987.51 m
3135.0 4927.51 l
S
n
3105.0 5032.51 m
3165.0 5032.51 l
S
n
3135.0 5062.51 m
3135.0 5002.51 l
S
n
3105.0 5107.51 m
3165.0 5107.51 l
S
n
3135.0 5137.51 m
3135.0 5077.51 l
S
n
3105.0 5190.01 m
3165.0 5190.01 l
S
n
3135.0 5220.01 m
3135.0 5160.01 l
S
n
3105.0 5265.01 m
3165.0 5265.01 l
S
n
3135.0 5295.01 m
3135.0 5235.01 l
S
n
3105.0 5340.01 m
3165.0 5340.01 l
S
n
3135.0 5370.01 m
3135.0 5310.01 l
S
n
3105.0 5400.01 m
3165.0 5400.01 l
S
n
3135.0 5430.01 m
3135.0 5370.01 l
S
n
3105.0 5452.51 m
3165.0 5452.51 l
S
n
3135.0 5482.51 m
3135.0 5422.51 l
S
n
3105.0 5512.51 m
3165.0 5512.51 l
S
n
3135.0 5542.51 m
3135.0 5482.51 l
S
n
3105.0 5565.01 m
3165.0 5565.01 l
S
n
3135.0 5595.01 m
3135.0 5535.01 l
S
n
1477.5 2482.5 m
1537.5 2482.5 l
S
n
1507.5 2512.5 m
1507.5 2452.5 l
S
n
1477.5 2490.0 m
1537.5 2490.0 l
S
n
1507.5 2520.0 m
1507.5 2460.0 l
S
n
1477.5 2505.0 m
1537.5 2505.0 l
S
n
1507.5 2535.0 m
1507.5 2475.0 l
S
n
1485.0 2512.5 m
1545.0 2512.5 l
S
n
1515.0 2542.5 m
1515.0 2482.5 l
S
n
1485.0 2527.5 m
1545.0 2527.5 l
S
n
1515.0 2557.5 m
1515.0 2497.5 l
S
n
1492.5 2542.5 m
1552.5 2542.5 l
S
n
1522.5 2572.5 m
1522.5 2512.5 l
S
n
1500.0 2565.0 m
1560.0 2565.0 l
S
n
1530.0 2595.0 m
1530.0 2535.0 l
S
n
1507.5 2587.5 m
1567.5 2587.5 l
S
n
1537.5 2617.5 m
1537.5 2557.5 l
S
n
1515.0 2617.5 m
1575.0 2617.5 l
S
n
1545.0 2647.5 m
1545.0 2587.5 l
S
n
1522.5 2640.0 m
1582.5 2640.0 l
S
n
1552.5 2670.0 m
1552.5 2610.0 l
S
n
1537.5 2677.5 m
1597.5 2677.5 l
S
n
1567.5 2707.5 m
1567.5 2647.5 l
S
n
1545.0 2707.5 m
1605.0 2707.5 l
S
n
1575.0 2737.5 m
1575.0 2677.5 l
S
n
1552.5 2745.0 m
1612.5 2745.0 l
S
n
1582.5 2775.0 m
1582.5 2715.0 l
S
n
1567.5 2782.5 m
1627.5 2782.5 l
S
n
1597.5 2812.5 m
1597.5 2752.5 l
S
n
1575.0 2820.0 m
1635.0 2820.0 l
S
n
1605.0 2850.0 m
1605.0 2790.0 l
S
n
1590.0 2865.0 m
1650.0 2865.0 l
S
n
1620.0 2895.0 m
1620.0 2835.0 l
S
n
1605.0 2910.0 m
1665.0 2910.0 l
S
n
1635.0 2940.0 m
1635.0 2880.0 l
S
n
1620.0 2955.0 m
1680.0 2955.0 l
S
n
1650.0 2985.0 m
1650.0 2925.0 l
S
n
1627.5 3007.5 m
1687.5 3007.5 l
S
n
1657.5 3037.5 m
1657.5 2977.5 l
S
n
1642.5 3060.0 m
1702.5 3060.0 l
S
n
1672.5 3090.0 m
1672.5 3030.0 l
S
n
1657.5 3112.5 m
1717.5 3112.5 l
S
n
1687.5 3142.5 m
1687.5 3082.5 l
S
n
1672.5 3165.0 m
1732.5 3165.0 l
S
n
1702.5 3195.0 m
1702.5 3135.0 l
S
n
1687.5 3225.0 m
1747.5 3225.0 l
S
n
1717.5 3255.0 m
1717.5 3195.0 l
S
n
1702.5 3277.5 m
1762.5 3277.5 l
S
n
1732.5 3307.5 m
1732.5 3247.5 l
S
n
1717.5 3337.5 m
1777.5 3337.5 l
S
n
1747.5 3367.5 m
1747.5 3307.5 l
S
n
1732.5 3397.5 m
1792.5 3397.5 l
S
n
1762.5 3427.5 m
1762.5 3367.5 l
S
n
1747.5 3465.0 m
1807.5 3465.0 l
S
n
1777.5 3495.01 m
1777.5 3435.0 l
S
n
1755.0 3525.01 m
1815.0 3525.01 l
S
n
1785.0 3555.01 m
1785.0 3495.01 l
S
n
1770.0 3592.51 m
1830.0 3592.51 l
S
n
1800.0 3622.51 m
1800.0 3562.51 l
S
n
1785.0 3660.01 m
1845.0 3660.01 l
S
n
1815.0 3690.01 m
1815.0 3630.01 l
S
n
1800.0 3727.51 m
1860.0 3727.51 l
S
n
1830.0 3757.51 m
1830.0 3697.51 l
S
n
1815.0 3795.01 m
1875.0 3795.01 l
S
n
1845.0 3825.01 m
1845.0 3765.01 l
S
n
1830.0 3862.51 m
1890.0 3862.51 l
S
n
1860.0 3892.51 m
1860.0 3832.51 l
S
n
1837.5 3930.01 m
1897.5 3930.01 l
S
n
1867.5 3960.01 m
1867.5 3900.01 l
S
n
1852.5 4005.01 m
1912.5 4005.01 l
S
n
1882.5 4035.01 m
1882.5 3975.01 l
S
n
1867.5 4072.51 m
1927.5 4072.51 l
S
n
1897.5 4102.51 m
1897.5 4042.51 l
S
n
1875.0 4147.51 m
1935.0 4147.51 l
S
n
1905.0 4177.51 m
1905.0 4117.51 l
S
n
1882.5 4200.01 m
1942.5 4200.01 l
S
n
1912.5 4230.01 m
1912.5 4170.01 l
S
n
1890.0 4252.51 m
1950.0 4252.51 l
S
n
1920.0 4282.51 m
1920.0 4222.51 l
S
n
1897.5 4305.01 m
1957.5 4305.01 l
S
n
1927.5 4335.01 m
1927.5 4275.01 l
S
n
1905.0 4357.51 m
1965.0 4357.51 l
S
n
1935.0 4387.51 m
1935.0 4327.51 l
S
n
4732.51 2482.5 m
4792.51 2482.5 l
S
n
4762.51 2512.5 m
4762.51 2452.5 l
S
n
4725.01 2490.0 m
4785.01 2490.0 l
S
n
4755.01 2520.0 m
4755.01 2460.0 l
S
n
4725.01 2505.0 m
4785.01 2505.0 l
S
n
4755.01 2535.0 m
4755.01 2475.0 l
S
n
4717.51 2512.5 m
4777.51 2512.5 l
S
n
4747.51 2542.5 m
4747.51 2482.5 l
S
n
4717.51 2527.5 m
4777.51 2527.5 l
S
n
4747.51 2557.5 m
4747.51 2497.5 l
S
n
4710.01 2542.5 m
4770.01 2542.5 l
S
n
4740.01 2572.5 m
4740.01 2512.5 l
S
n
4702.51 2565.0 m
4762.51 2565.0 l
S
n
4732.51 2595.0 m
4732.51 2535.0 l
S
n
4695.01 2587.5 m
4755.01 2587.5 l
S
n
4725.01 2617.5 m
4725.01 2557.5 l
S
n
4687.51 2617.5 m
4747.51 2617.5 l
S
n
4717.51 2647.5 m
4717.51 2587.5 l
S
n
4680.01 2640.0 m
4740.01 2640.0 l
S
n
4710.01 2670.0 m
4710.01 2610.0 l
S
n
4665.01 2677.5 m
4725.01 2677.5 l
S
n
4695.01 2707.5 m
4695.01 2647.5 l
S
n
4657.51 2707.5 m
4717.51 2707.5 l
S
n
4687.51 2737.5 m
4687.51 2677.5 l
S
n
4650.01 2745.0 m
4710.01 2745.0 l
S
n
4680.01 2775.0 m
4680.01 2715.0 l
S
n
4635.01 2782.5 m
4695.01 2782.5 l
S
n
4665.01 2812.5 m
4665.01 2752.5 l
S
n
4627.51 2820.0 m
4687.51 2820.0 l
S
n
4657.51 2850.0 m
4657.51 2790.0 l
S
n
4612.51 2865.0 m
4672.51 2865.0 l
S
n
4642.51 2895.0 m
4642.51 2835.0 l
S
n
4597.51 2910.0 m
4657.51 2910.0 l
S
n
4627.51 2940.0 m
4627.51 2880.0 l
S
n
4582.51 2955.0 m
4642.51 2955.0 l
S
n
4612.51 2985.0 m
4612.51 2925.0 l
S
n
4575.01 3007.5 m
4635.01 3007.5 l
S
n
4605.01 3037.5 m
4605.01 2977.5 l
S
n
4560.01 3060.0 m
4620.01 3060.0 l
S
n
4590.01 3090.0 m
4590.01 3030.0 l
S
n
4545.01 3112.5 m
4605.01 3112.5 l
S
n
4575.01 3142.5 m
4575.01 3082.5 l
S
n
4530.01 3165.0 m
4590.01 3165.0 l
S
n
4560.01 3195.0 m
4560.01 3135.0 l
S
n
4515.01 3225.0 m
4575.01 3225.0 l
S
n
4545.01 3255.0 m
4545.01 3195.0 l
S
n
4500.01 3277.5 m
4560.01 3277.5 l
S
n
4530.01 3307.5 m
4530.01 3247.5 l
S
n
4485.01 3337.5 m
4545.01 3337.5 l
S
n
4515.01 3367.5 m
4515.01 3307.5 l
S
n
4470.01 3397.5 m
4530.01 3397.5 l
S
n
4500.01 3427.5 m
4500.01 3367.5 l
S
n
4455.01 3465.0 m
4515.01 3465.0 l
S
n
4485.01 3495.01 m
4485.01 3435.0 l
S
n
4447.51 3525.01 m
4507.51 3525.01 l
S
n
4477.51 3555.01 m
4477.51 3495.01 l
S
n
4432.51 3592.51 m
4492.51 3592.51 l
S
n
4462.51 3622.51 m
4462.51 3562.51 l
S
n
4417.51 3660.01 m
4477.51 3660.01 l
S
n
4447.51 3690.01 m
4447.51 3630.01 l
S
n
4402.51 3727.51 m
4462.51 3727.51 l
S
n
4432.51 3757.51 m
4432.51 3697.51 l
S
n
4387.51 3795.01 m
4447.51 3795.01 l
S
n
4417.51 3825.01 m
4417.51 3765.01 l
S
n
4372.51 3862.51 m
4432.51 3862.51 l
S
n
4402.51 3892.51 m
4402.51 3832.51 l
S
n
4365.01 3930.01 m
4425.01 3930.01 l
S
n
4395.01 3960.01 m
4395.01 3900.01 l
S
n
4350.01 4005.01 m
4410.01 4005.01 l
S
n
4380.01 4035.01 m
4380.01 3975.01 l
S
n
4335.01 4072.51 m
4395.01 4072.51 l
S
n
4365.01 4102.51 m
4365.01 4042.51 l
S
n
4327.51 4147.51 m
4387.51 4147.51 l
S
n
4357.51 4177.51 m
4357.51 4117.51 l
S
n
4320.01 4200.01 m
4380.01 4200.01 l
S
n
4350.01 4230.01 m
4350.01 4170.01 l
S
n
4312.51 4252.51 m
4372.51 4252.51 l
S
n
4342.51 4282.51 m
4342.51 4222.51 l
S
n
4305.01 4305.01 m
4365.01 4305.01 l
S
n
4335.01 4335.01 m
4335.01 4275.01 l
S
n
4297.51 4357.51 m
4357.51 4357.51 l
S
n
4327.51 4387.51 m
4327.51 4327.51 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
n
[/DeviceGray] cs 1.0 sc
3330.010010 5010.009766 1387.499756 502.503906 rectfill

5.00001 w
n
3330.01 5010.01 m
3330.01 5512.51 l
4717.51 5512.51 l
4717.51 5010.01 l
3330.01 5010.01 l
S
n
3330.01 5512.51 m
4717.51 5512.51 l
0.0 sc
S
n
3330.01 5010.01 m
4717.51 5010.01 l
S
n
4717.51 5010.01 m
4717.51 5512.51 l
S
n
3330.01 5010.01 m
3330.01 5512.51 l
S
n
3330.01 5010.01 m
4717.51 5010.01 l
S
n
3330.01 5010.01 m
3330.01 5512.51 l
S
n
3330.01 5512.51 m
4717.51 5512.51 l
S
n
3330.01 5010.01 m
4717.51 5010.01 l
S
n
4717.51 5010.01 m
4717.51 5512.51 l
S
n
3330.01 5010.01 m
3330.01 5512.51 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
370.501 539.251 m
/N8 10.0 Tf
(Original Nash Control)
[7.78 3.32993 2.21985 5.56 2.21985 5.56 5.56 2.21985 2.78 7.21985 5.56 
5.0 5.56 2.78 7.21985 5.56 5.56 2.78 3.32993 5.56 2.21985 ] pdfxs
Q
Q
q
n
3330.01 5512.51 m
3330.01 5002.51 l
4725.01 5002.51 l
4725.01 5512.51 l
h
W
n
20.0001 w
1 j
n
3382.51 5437.51 m
3675.01 5437.51 l
[/DeviceRGB] cs 0.0 0.0 1.0 sc
S
Q
q
n
960.0 5850.01 m
960.0 2062.5 l
5160.01 2062.5 l
5160.01 5850.01 l
h
W
n
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
370.501 526.501 m
/N8 10.0 Tf
(Proposed Design k)
[6.66992 3.32993 5.56 5.56 5.56 5.0 5.56 5.56 2.78 7.21985 5.56 
5.0 2.21985 5.56 5.56 2.78 5.0 ] pdfxs
454.501 522.001 m
/N8 8.00004 Tf
(i) show
456.001 526.501 m
/N8 10.0 Tf
(=20)
[5.84 5.56 5.56 ] pdfxs
Q
Q
q
n
3435.01 5377.51 m
3435.01 5182.51 l
3630.01 5182.51 l
3630.01 5377.51 l
h
W
n
20.0001 w
1 j
n
3555.0 5287.51 m
3555.0 5270.94 3541.57 5257.51 3525.0 5257.51 c
3508.44 5257.51 3495.0 5270.94 3495.0 5287.51 c
3495.0 5304.07 3508.44 5317.51 3525.0 5317.51 c
3541.57 5317.51 3555.0 5304.07 3555.0 5287.51 c
[/DeviceRGB] cs 1.0 0.0 0.0 sc
S
Q
q
n
960.0 5850.01 m
960.0 2062.5 l
5160.01 2062.5 l
5160.01 5850.01 l
h
W
n
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
370.501 509.251 m
/N8 10.0 Tf
(Proposed Design k)
[6.66992 3.32993 5.56 5.56 5.56 5.0 5.56 5.56 2.78 7.21985 5.56 
5.0 2.21985 5.56 5.56 2.78 5.0 ] pdfxs
454.501 504.751 m
/N8 8.00004 Tf
(i) show
456.001 509.251 m
/N8 10.0 Tf
(=40)
[5.84 5.56 5.56 ] pdfxs
Q
Q
q
n
3435.01 5212.51 m
3435.01 5010.01 l
3630.01 5010.01 l
3630.01 5212.51 l
h
W
n
20.0001 w
1 j
n
3495.01 5115.01 m
3555.01 5115.01 l
[/DeviceRGB] cs 0.0 1.0 0.0 sc
S
n
3525.01 5145.01 m
3525.01 5085.01 l
S
Q
q
n
960.0 5850.01 m
960.0 2062.5 l
5160.01 2062.5 l
5160.01 5850.01 l
h
W
n
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
184.5 286.5 m
/N8 10.0 Tf
(Agent 2)
[6.66992 5.56 5.56 5.56 2.78 2.78 5.56 ] pdfxs
396.75 319.5 m
(Agent 3)
[6.66992 5.56 5.56 5.56 2.78 2.78 5.56 ] pdfxs
325.5 276.75 m
(Agent 1)
[6.66992 5.56 5.56 5.56 2.78 2.78 5.56 ] pdfxs
Q
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Helvetica
%%EOF
